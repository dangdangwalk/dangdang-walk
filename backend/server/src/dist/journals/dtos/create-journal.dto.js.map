{"version":3,"sources":["../../../src/journals/dtos/create-journal.dto.ts"],"sourcesContent":["import { Type } from 'class-transformer';\nimport {\n    IsArray,\n    IsDateString,\n    IsNotEmpty,\n    IsNumber,\n    IsOptional,\n    IsString,\n    Max,\n    Min,\n    ValidateNested,\n} from 'class-validator';\n\nimport { IsWGS84 } from '../validators/WGS84.validator';\n\nclass Excrements {\n    @IsNotEmpty()\n    dogId: number;\n\n    @IsWGS84()\n    fecesLocations: [number, number][];\n\n    @IsWGS84()\n    urineLocations: [number, number][];\n}\n\nclass JournalInfo {\n    @IsNotEmpty()\n    @Max(100000) //TODO: 합의 필요\n    @Min(0)\n    distance: number;\n\n    @IsNotEmpty()\n    @Max(10800) //TODO: 합의 필요\n    @Min(0)\n    calories: number;\n\n    @IsNotEmpty()\n    @IsDateString()\n    startedAt: Date;\n\n    @IsNotEmpty()\n    @IsNumber()\n    @Max(10800) //TODO: 합의 필요\n    @Min(0)\n    duration: number;\n\n    @IsWGS84()\n    routes: [number, number][];\n\n    @IsOptional()\n    @IsString()\n    memo: string;\n\n    @IsOptional()\n    @IsArray()\n    @IsString({ each: true })\n    journalPhotos: string[];\n}\n\nexport class CreateJournalDto {\n    @IsNotEmpty()\n    @IsArray()\n    @IsNumber({}, { each: true })\n    dogs: number[];\n\n    @IsNotEmpty()\n    @ValidateNested()\n    @Type(() => JournalInfo)\n    journalInfo: JournalInfo;\n\n    @IsOptional()\n    @IsArray()\n    @ValidateNested()\n    @Type(() => Excrements)\n    excrements: Excrements[];\n}\n"],"names":["CreateJournalDto","Excrements","IsNotEmpty","IsWGS84","JournalInfo","Max","Min","IsDateString","IsNumber","IsOptional","IsString","IsArray","each","ValidateNested","Type"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BA4DaA;;;eAAAA;;;kCA5DQ;gCAWd;gCAEiB;;;;;;;;;;AAExB,IAAA,AAAMC,aAAN,MAAMA;AASN;;IARKC,IAAAA,0BAAU;;GADTD;;IAIDE,IAAAA,uBAAO;;GAJNF;;IAODE,IAAAA,uBAAO;;GAPNF;AAWN,IAAA,AAAMG,cAAN,MAAMA;AAgCN;;IA/BKF,IAAAA,0BAAU;IACVG,IAAAA,mBAAG,EAAC,QAAQ,aAAa;;IACzBC,IAAAA,mBAAG,EAAC;;GAHHF;;IAMDF,IAAAA,0BAAU;IACVG,IAAAA,mBAAG,EAAC,OAAO,aAAa;;IACxBC,IAAAA,mBAAG,EAAC;;GARHF;;IAWDF,IAAAA,0BAAU;IACVK,IAAAA,4BAAY;uCACF,gCAAA;GAbTH;;IAeDF,IAAAA,0BAAU;IACVM,IAAAA,wBAAQ;IACRH,IAAAA,mBAAG,EAAC,OAAO,aAAa;;IACxBC,IAAAA,mBAAG,EAAC;;GAlBHF;;IAqBDD,IAAAA,uBAAO;;GArBNC;;IAwBDK,IAAAA,0BAAU;IACVC,IAAAA,wBAAQ;;GAzBPN;;IA4BDK,IAAAA,0BAAU;IACVE,IAAAA,uBAAO;IACPD,IAAAA,wBAAQ,EAAC;QAAEE,MAAM;IAAK;;GA9BrBR;AAkCC,IAAA,AAAMJ,mBAAN,MAAMA;AAgBb;;IAfKE,IAAAA,0BAAU;IACVS,IAAAA,uBAAO;IACPH,IAAAA,wBAAQ,EAAC,CAAC,GAAG;QAAEI,MAAM;IAAK;;GAHlBZ;;IAMRE,IAAAA,0BAAU;IACVW,IAAAA,8BAAc;IACdC,IAAAA,sBAAI,EAAC,IAAMV;uCACC,uCAAA;GATJJ;;IAWRS,IAAAA,0BAAU;IACVE,IAAAA,uBAAO;IACPE,IAAAA,8BAAc;IACdC,IAAAA,sBAAI,EAAC,IAAMb;;GAdHD"}