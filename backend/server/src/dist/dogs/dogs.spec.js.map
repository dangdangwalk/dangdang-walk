{"version":3,"sources":["../../src/dogs/dogs.spec.ts"],"sourcesContent":["import { Dogs } from './dogs.entity';\n\nimport { GENDER } from './types/dogs.type';\n\nimport { DogWalkDay } from '../dog-walk-day/dog-walk-day.entity';\nimport { mockDog } from '../fixtures/dogs.fixture';\nimport { TodayWalkTime } from '../today-walk-time/today-walk-time.entity';\n\ndescribe('Dogs', () => {\n    it('dogs 정보가 주어지면 dogs 정보를 반환해야 한다.', () => {\n        expect(mockDog).toEqual({\n            id: 1,\n            walkDay: new DogWalkDay({}),\n            todayWalkTime: new TodayWalkTime({}),\n            name: '덕지',\n            breedId: 1,\n            gender: GENDER.Male,\n            birth: null,\n            isNeutered: true,\n            weight: 2,\n            profilePhotoUrl: 'default/profile.png',\n            isWalking: false,\n            updatedAt: expect.any(Date),\n        });\n    });\n\n    it('dogs 정보가 없으면 빈 객체를 반환해야 한다.', () => {\n        const breed = new Dogs({});\n\n        expect(breed).toEqual({});\n    });\n});\n"],"names":["describe","it","expect","mockDog","toEqual","id","walkDay","DogWalkDay","todayWalkTime","TodayWalkTime","name","breedId","gender","GENDER","Male","birth","isNeutered","weight","profilePhotoUrl","isWalking","updatedAt","any","Date","breed","Dogs"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";4BAAqB;0BAEE;kCAEI;6BACH;qCACM;AAE9BA,SAAS,QAAQ;IACbC,GAAG,mCAAmC;QAClCC,OAAOC,oBAAO,EAAEC,OAAO,CAAC;YACpBC,IAAI;YACJC,SAAS,IAAIC,4BAAU,CAAC,CAAC;YACzBC,eAAe,IAAIC,kCAAa,CAAC,CAAC;YAClCC,MAAM;YACNC,SAAS;YACTC,QAAQC,gBAAM,CAACC,IAAI;YACnBC,OAAO;YACPC,YAAY;YACZC,QAAQ;YACRC,iBAAiB;YACjBC,WAAW;YACXC,WAAWlB,OAAOmB,GAAG,CAACC;QAC1B;IACJ;IAEArB,GAAG,+BAA+B;QAC9B,MAAMsB,QAAQ,IAAIC,gBAAI,CAAC,CAAC;QAExBtB,OAAOqB,OAAOnB,OAAO,CAAC,CAAC;IAC3B;AACJ"}