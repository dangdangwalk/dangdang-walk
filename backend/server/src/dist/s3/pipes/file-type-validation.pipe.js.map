{"version":3,"sources":["../../../src/s3/pipes/file-type-validation.pipe.ts"],"sourcesContent":["import { BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\n\nimport { isTypedArray } from '../../utils/validator.util';\n\nconst allowedFileTypes = [\n    'xbm',\n    'tif',\n    'jfif',\n    'ico',\n    'tiff',\n    'gif',\n    'svg',\n    'webp',\n    'svgz',\n    'jpg',\n    'jpeg',\n    'png',\n    'bmp',\n    'pjp',\n    'apng',\n    'pjpeg',\n    'avif',\n] as const;\n\nexport type FileType = (typeof allowedFileTypes)[number];\n\n@Injectable()\nexport class FileTypeValidationPipe implements PipeTransform<any, FileType[]> {\n    readonly allowedExtensions = allowedFileTypes;\n\n    transform(value: any): FileType[] {\n        if (!isTypedArray(value, 'string')) {\n            throw new BadRequestException('Validation failed (string array expected)');\n        }\n\n        const invalidFiles = value.filter(\n            (type: string) => !this.allowedExtensions.includes(type.toLowerCase() as FileType),\n        );\n\n        if (invalidFiles.length > 0) {\n            throw new BadRequestException(\n                `Invalid file types: ${invalidFiles.join(', ')}. Allowed types are: ${this.allowedExtensions.join(', ')}`,\n            );\n        }\n\n        return value as FileType[];\n    }\n}\n"],"names":["FileTypeValidationPipe","allowedFileTypes","transform","value","isTypedArray","BadRequestException","invalidFiles","filter","type","allowedExtensions","includes","toLowerCase","length","join","Injectable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BA2BaA;;;eAAAA;;;wBA3BkD;+BAElC;;;;;;;AAE7B,MAAMC,mBAAmB;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAKM,IAAA,AAAMD,yBAAN,MAAMA;IAGTE,UAAUC,KAAU,EAAc;QAC9B,IAAI,CAACC,IAAAA,2BAAY,EAACD,OAAO,WAAW;YAChC,MAAM,IAAIE,2BAAmB,CAAC;QAClC;QAEA,MAAMC,eAAeH,MAAMI,MAAM,CAC7B,CAACC,OAAiB,CAAC,IAAI,CAACC,iBAAiB,CAACC,QAAQ,CAACF,KAAKG,WAAW;QAGvE,IAAIL,aAAaM,MAAM,GAAG,GAAG;YACzB,MAAM,IAAIP,2BAAmB,CACzB,CAAC,oBAAoB,EAAEC,aAAaO,IAAI,CAAC,MAAM,qBAAqB,EAAE,IAAI,CAACJ,iBAAiB,CAACI,IAAI,CAAC,MAAM,CAAC;QAEjH;QAEA,OAAOV;IACX;;aAlBSM,oBAAoBR;;AAmBjC;AApBaD;IADZc,IAAAA,kBAAU;GACEd"}