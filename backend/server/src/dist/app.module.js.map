{"version":3,"sources":["../src/app.module.ts"],"sourcesContent":["import { Module, Scope } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { PrometheusModule } from '@willsoto/nestjs-prometheus';\n\nimport { AppController } from './app.controller';\nimport { AuthModule } from './auth/auth.module';\nimport { DatabaseModule } from './common/database/database.module';\nimport { HealthController } from './common/health/health.controller';\nimport { LoggingInterceptor } from './common/interceptors/logging.interceptor';\nimport { ProfilingInterceptor } from './common/interceptors/profilingInterceptor';\nimport { PrometheusInterceptor } from './common/interceptors/prometheus.interceptor';\nimport { WinstonLoggerModule } from './common/logger/winstonLogger.module';\nimport { StatisticsModule } from './statistics/statistics.module';\nimport { WalkModule } from './walk/walk.module';\n\n@Module({\n    imports: [\n        DatabaseModule,\n        WinstonLoggerModule,\n        ConfigModule.forRoot({\n            isGlobal: true,\n            envFilePath: `.env.${process.env.NODE_ENV}`,\n        }),\n        PrometheusModule.register({\n            path: '/metrics',\n            defaultMetrics: {\n                enabled: true,\n            },\n        }),\n        AuthModule,\n        StatisticsModule,\n        WalkModule,\n    ],\n    controllers: [AppController, HealthController],\n    providers: [\n        {\n            provide: APP_INTERCEPTOR,\n            useClass: PrometheusInterceptor,\n        },\n        {\n            provide: APP_INTERCEPTOR,\n            scope: Scope.REQUEST,\n            useClass: LoggingInterceptor,\n        },\n        ...(process.env.ENABLE_PROFILING === 'true'\n            ? [\n                  {\n                      provide: APP_INTERCEPTOR,\n                      useClass: ProfilingInterceptor,\n                  },\n              ]\n            : []),\n    ],\n})\nexport class AppModule {}\n"],"names":["AppModule","Module","imports","DatabaseModule","WinstonLoggerModule","ConfigModule","forRoot","isGlobal","envFilePath","process","env","NODE_ENV","PrometheusModule","register","path","defaultMetrics","enabled","AuthModule","StatisticsModule","WalkModule","controllers","AppController","HealthController","providers","provide","APP_INTERCEPTOR","useClass","PrometheusInterceptor","scope","Scope","REQUEST","LoggingInterceptor","ENABLE_PROFILING","ProfilingInterceptor"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BAuDaA;;;eAAAA;;;wBAvDiB;wBACD;sBACG;kCACC;+BAEH;4BACH;gCACI;kCACE;oCACE;sCACE;uCACC;qCACF;kCACH;4BACN;;;;;;;AAyCpB,IAAA,AAAMA,YAAN,MAAMA;AAAW;AAAXA;IAvCZC,IAAAA,cAAM,EAAC;QACJC,SAAS;YACLC,8BAAc;YACdC,wCAAmB;YACnBC,oBAAY,CAACC,OAAO,CAAC;gBACjBC,UAAU;gBACVC,aAAa,CAAC,KAAK,EAAEC,QAAQC,GAAG,CAACC,QAAQ,CAAC,CAAC;YAC/C;YACAC,kCAAgB,CAACC,QAAQ,CAAC;gBACtBC,MAAM;gBACNC,gBAAgB;oBACZC,SAAS;gBACb;YACJ;YACAC,sBAAU;YACVC,kCAAgB;YAChBC,sBAAU;SACb;QACDC,aAAa;YAACC,4BAAa;YAAEC,kCAAgB;SAAC;QAC9CC,WAAW;YACP;gBACIC,SAASC,qBAAe;gBACxBC,UAAUC,4CAAqB;YACnC;YACA;gBACIH,SAASC,qBAAe;gBACxBG,OAAOC,aAAK,CAACC,OAAO;gBACpBJ,UAAUK,sCAAkB;YAChC;eACItB,QAAQC,GAAG,CAACsB,gBAAgB,KAAK,SAC/B;gBACI;oBACIR,SAASC,qBAAe;oBACxBC,UAAUO,0CAAoB;gBAClC;aACH,GACD,EAAE;SACX;IACL;GACajC"}