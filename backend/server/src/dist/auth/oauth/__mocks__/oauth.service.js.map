{"version":3,"sources":["../../../../src/auth/oauth/__mocks__/oauth.service.ts"],"sourcesContent":["import { RequestToken, RequestTokenRefresh, RequestUserInfo } from '../oauth.service.interface';\n\nexport const MockOauthService = {\n    requestToken: jest.fn().mockResolvedValue({\n        access_token: 'mock_oauth_access_token',\n        refresh_token: 'mock_oauth_refresh_token',\n    } as RequestToken),\n\n    requestUserInfo: jest.fn().mockResolvedValue({\n        oauthId: '12345',\n        oauthNickname: 'mock_oauth_nickname',\n        email: 'mock_email@example.com',\n        profileImageUrl: 'mock_profile_image.jpg',\n    } as RequestUserInfo),\n\n    requestTokenExpiration: jest.fn(),\n\n    requestUnlink: jest.fn(),\n\n    requestTokenRefresh: jest.fn().mockResolvedValue({\n        access_token: 'new_mock_oauth_access_token',\n        refresh_token: 'new_mock_oauth_refresh_token',\n    } as RequestTokenRefresh),\n};\n"],"names":["MockOauthService","requestToken","jest","fn","mockResolvedValue","access_token","refresh_token","requestUserInfo","oauthId","oauthNickname","email","profileImageUrl","requestTokenExpiration","requestUnlink","requestTokenRefresh"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BAEaA;;;eAAAA;;;AAAN,MAAMA,mBAAmB;IAC5BC,cAAcC,KAAKC,EAAE,GAAGC,iBAAiB,CAAC;QACtCC,cAAc;QACdC,eAAe;IACnB;IAEAC,iBAAiBL,KAAKC,EAAE,GAAGC,iBAAiB,CAAC;QACzCI,SAAS;QACTC,eAAe;QACfC,OAAO;QACPC,iBAAiB;IACrB;IAEAC,wBAAwBV,KAAKC,EAAE;IAE/BU,eAAeX,KAAKC,EAAE;IAEtBW,qBAAqBZ,KAAKC,EAAE,GAAGC,iBAAiB,CAAC;QAC7CC,cAAc;QACdC,eAAe;IACnB;AACJ"}