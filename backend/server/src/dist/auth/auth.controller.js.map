{"version":3,"sources":["../../src/auth/auth.controller.ts"],"sourcesContent":["import {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    HttpCode,\n    Post,\n    UseGuards,\n    UseInterceptors,\n    UsePipes,\n    ValidationPipe,\n} from '@nestjs/common';\n\nimport { AuthService } from './auth.service';\nimport { OauthCookies } from './decorators/oauth-data.decorator';\nimport { SkipAuthGuard } from './decorators/public.decorator';\nimport { OauthAuthorizeDto } from './dtos/oauth-authorize.dto';\nimport { OauthDto } from './dtos/oauth.dto';\nimport { OauthDataGuard } from './guards/oauth-data.guard';\nimport { RefreshTokenGuard } from './guards/refresh-token.guard';\nimport { CookieInterceptor } from './interceptors/cookie.interceptor';\nimport { AccessTokenPayload, RefreshTokenPayload } from './token/token.service';\n\nimport { User } from '../users/decorators/user.decorator';\n\n@Controller('/auth')\n@UseInterceptors(CookieInterceptor)\n@UsePipes(new ValidationPipe({ validateCustomDecorators: true, whitelist: true }))\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {}\n\n    @Post('/login')\n    @HttpCode(200)\n    @SkipAuthGuard()\n    async login(@Body() oauthAuthorizeDTO: OauthAuthorizeDto) {\n        return await this.authService.login(oauthAuthorizeDTO);\n    }\n\n    @Post('/signup')\n    @SkipAuthGuard()\n    @UseGuards(OauthDataGuard)\n    async signup(@OauthCookies() oauthDTO: OauthDto) {\n        return await this.authService.signup(oauthDTO);\n    }\n\n    @Post('/logout')\n    @HttpCode(200)\n    async logout(@User() user: AccessTokenPayload) {\n        return await this.authService.logout(user);\n    }\n\n    @Get('/token')\n    @SkipAuthGuard()\n    @UseGuards(RefreshTokenGuard)\n    async token(@User() user: RefreshTokenPayload) {\n        return await this.authService.reissueTokens(user);\n    }\n\n    @Delete('/deactivate')\n    async deactivate(@User() user: AccessTokenPayload) {\n        return await this.authService.deactivate(user);\n    }\n}\n"],"names":["AuthController","login","oauthAuthorizeDTO","authService","signup","oauthDTO","logout","user","token","reissueTokens","deactivate","constructor","Post","HttpCode","SkipAuthGuard","Body","UseGuards","OauthDataGuard","OauthCookies","User","Get","RefreshTokenGuard","Delete","Controller","UseInterceptors","CookieInterceptor","UsePipes","ValidationPipe","validateCustomDecorators","whitelist"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BA4BaA;;;eAAAA;;;wBAjBN;6BAEqB;oCACC;iCACC;mCACI;0BACT;gCACM;mCACG;mCACA;8BACsB;+BAEnC;;;;;;;;;;;;;;;AAKd,IAAA,AAAMA,iBAAN,MAAMA;IAGT,MAGMC,MAAM,AAAQC,iBAAoC,EAAE;QACtD,OAAO,MAAM,IAAI,CAACC,WAAW,CAACF,KAAK,CAACC;IACxC;IAEA,MAGME,OAAO,AAAgBC,QAAkB,EAAE;QAC7C,OAAO,MAAM,IAAI,CAACF,WAAW,CAACC,MAAM,CAACC;IACzC;IAEA,MAEMC,OAAO,AAAQC,IAAwB,EAAE;QAC3C,OAAO,MAAM,IAAI,CAACJ,WAAW,CAACG,MAAM,CAACC;IACzC;IAEA,MAGMC,MAAM,AAAQD,IAAyB,EAAE;QAC3C,OAAO,MAAM,IAAI,CAACJ,WAAW,CAACM,aAAa,CAACF;IAChD;IAEA,MACMG,WAAW,AAAQH,IAAwB,EAAE;QAC/C,OAAO,MAAM,IAAI,CAACJ,WAAW,CAACO,UAAU,CAACH;IAC7C;IAhCAI,YAAY,AAAiBR,WAAwB,CAAE;aAA1BA,cAAAA;IAA2B;AAiC5D;;IA/BKS,IAAAA,YAAI,EAAC;IACLC,IAAAA,gBAAQ,EAAC;IACTC,IAAAA,8BAAa;IACDC,aAAAA,IAAAA,YAAI;;;eAAsB,oCAAiB,4BAAjB,oCAAiB;;;GAN/Cf;;IAURY,IAAAA,YAAI,EAAC;IACLE,IAAAA,8BAAa;IACbE,IAAAA,iBAAS,EAACC,8BAAc;IACXC,aAAAA,IAAAA,gCAAY;;;eAAa,kBAAQ,4BAAR,kBAAQ;;;GAbtClB;;IAiBRY,IAAAA,YAAI,EAAC;IACLC,IAAAA,gBAAQ,EAAC;IACIM,aAAAA,IAAAA,mBAAI;;;eAAS,gCAAkB,4BAAlB,gCAAkB;;;GAnBpCnB;;IAuBRoB,IAAAA,WAAG,EAAC;IACJN,IAAAA,8BAAa;IACbE,IAAAA,iBAAS,EAACK,oCAAiB;IACfF,aAAAA,IAAAA,mBAAI;;;eAAS,iCAAmB,4BAAnB,iCAAmB;;;GA1BpCnB;;IA8BRsB,IAAAA,cAAM,EAAC;IACUH,aAAAA,IAAAA,mBAAI;;;eAAS,gCAAkB,4BAAlB,gCAAkB;;;GA/BxCnB;AAAAA;IAHZuB,IAAAA,kBAAU,EAAC;IACXC,IAAAA,uBAAe,EAACC,oCAAiB;IACjCC,IAAAA,gBAAQ,EAAC,IAAIC,sBAAc,CAAC;QAAEC,0BAA0B;QAAMC,WAAW;IAAK;;;eAEjC,wBAAW,4BAAX,wBAAW;;GAD5C7B"}