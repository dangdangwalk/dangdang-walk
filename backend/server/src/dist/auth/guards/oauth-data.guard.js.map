{"version":3,"sources":["../../../src/auth/guards/oauth-data.guard.ts"],"sourcesContent":["import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\n\nimport { WinstonLoggerService } from '../../common/logger/winstonLogger.service';\n\n@Injectable()\nexport class OauthDataGuard implements CanActivate {\n    constructor(private readonly logger: WinstonLoggerService) {}\n\n    async canActivate(context: ExecutionContext): Promise<boolean> {\n        const request = context.switchToHttp().getRequest();\n        const oauthData = this.extractOauthDataFromCookies(request);\n\n        request.oauthData = oauthData;\n\n        return true;\n    }\n\n    private extractOauthDataFromCookies(request: any) {\n        const oauthAccessToken = request.cookies['oauthAccessToken'];\n        const oauthRefreshToken = request.cookies['oauthRefreshToken'];\n        const provider = request.cookies['provider'];\n\n        if (!oauthAccessToken || !oauthRefreshToken || !provider) {\n            const missingFields = [\n                !oauthAccessToken && 'oauthAccessToken',\n                !oauthRefreshToken && 'oauthRefreshToken',\n                !provider && 'provider',\n            ]\n                .filter(Boolean)\n                .join(', ');\n\n            const error = new UnauthorizedException(`쿠키에 OAuth 데이터가 없습니다: ${missingFields}`);\n            this.logger.error(`OAuthDataGuard : ${missingFields} 필드가 없습니다`, {\n                trace: error.stack ?? '스택 없음',\n            });\n            throw error;\n        }\n\n        return { oauthAccessToken, oauthRefreshToken, provider };\n    }\n}\n"],"names":["OauthDataGuard","canActivate","context","request","switchToHttp","getRequest","oauthData","extractOauthDataFromCookies","oauthAccessToken","cookies","oauthRefreshToken","provider","missingFields","filter","Boolean","join","error","UnauthorizedException","logger","trace","stack","constructor","Injectable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BAKaA;;;eAAAA;;;wBALoE;sCAE5C;;;;;;;;;;AAG9B,IAAA,AAAMA,iBAAN,MAAMA;IAGT,MAAMC,YAAYC,OAAyB,EAAoB;QAC3D,MAAMC,UAAUD,QAAQE,YAAY,GAAGC,UAAU;QACjD,MAAMC,YAAY,IAAI,CAACC,2BAA2B,CAACJ;QAEnDA,QAAQG,SAAS,GAAGA;QAEpB,OAAO;IACX;IAEQC,4BAA4BJ,OAAY,EAAE;QAC9C,MAAMK,mBAAmBL,QAAQM,OAAO,CAAC,mBAAmB;QAC5D,MAAMC,oBAAoBP,QAAQM,OAAO,CAAC,oBAAoB;QAC9D,MAAME,WAAWR,QAAQM,OAAO,CAAC,WAAW;QAE5C,IAAI,CAACD,oBAAoB,CAACE,qBAAqB,CAACC,UAAU;YACtD,MAAMC,gBAAgB;gBAClB,CAACJ,oBAAoB;gBACrB,CAACE,qBAAqB;gBACtB,CAACC,YAAY;aAChB,CACIE,MAAM,CAACC,SACPC,IAAI,CAAC;YAEV,MAAMC,QAAQ,IAAIC,6BAAqB,CAAC,CAAC,qBAAqB,EAAEL,cAAc,CAAC;gBAEpEI;YADX,IAAI,CAACE,MAAM,CAACF,KAAK,CAAC,CAAC,iBAAiB,EAAEJ,cAAc,SAAS,CAAC,EAAE;gBAC5DO,OAAOH,CAAAA,eAAAA,MAAMI,KAAK,cAAXJ,0BAAAA,eAAe;YAC1B;YACA,MAAMA;QACV;QAEA,OAAO;YAAER;YAAkBE;YAAmBC;QAAS;IAC3D;IAjCAU,YAAY,AAAiBH,MAA4B,CAAE;aAA9BA,SAAAA;IAA+B;AAkChE;AAnCalB;IADZsB,IAAAA,kBAAU;;;eAE8B,0CAAoB,4BAApB,0CAAoB;;GADhDtB"}