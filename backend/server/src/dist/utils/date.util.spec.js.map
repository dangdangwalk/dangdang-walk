{"version":3,"sources":["../../src/utils/date.util.spec.ts"],"sourcesContent":["import {\n    formatDate,\n    getLastSunday,\n    getOneMonthAgo,\n    getStartAndEndOfDay,\n    getStartAndEndOfMonth,\n    getStartAndEndOfWeek,\n    getWeekNumber,\n} from './date.util';\n\ndescribe('formatDate', () => {\n    it('날짜 객체를 문자열로 입력하면 \"YYYY-MM-DD\" 형식의 문자열을 반환한다', () => {\n        const date = new Date('2024-05-21');\n\n        expect(formatDate(date)).toBe('2024-05-21');\n    });\n});\n\ndescribe('getWeekNumber', () => {\n    it('주어진 날짜에 대한 올바른 주 번호를 반환한다', () => {\n        const date = new Date('2024-05-17');\n\n        expect(getWeekNumber(date)).toBe(3);\n    });\n});\n\ndescribe('getStartAndEndOfMonth', () => {\n    it('주어진 날짜의 달에 대한 올바른 시작일과 종료일을 반환한다', () => {\n        const date = new Date('2024-05-17');\n        const { startDate, endDate } = getStartAndEndOfMonth(date);\n\n        expect(formatDate(startDate)).toBe('2024-05-01');\n        expect(formatDate(endDate)).toBe('2024-05-31');\n    });\n});\n\ndescribe('getStartAndEndOfWeek', () => {\n    it('주어진 날짜의 주에 대한 올바른 시작일과 종료일을 반환한다', () => {\n        const date = new Date('2024-05-30');\n        const { startDate, endDate } = getStartAndEndOfWeek(date);\n\n        expect(formatDate(startDate)).toBe('2024-05-26');\n        expect(formatDate(endDate)).toBe('2024-06-01');\n    });\n});\n\ndescribe('getStartAndEndOfDay', () => {\n    it('주어진 날짜에 대한 정확한 시작 시간(00:00:00)과 종료 시간(23:59:59)을 반환한다', () => {\n        const date = new Date('2024-05-12T12:30:00');\n        const { startDate, endDate } = getStartAndEndOfDay(date);\n\n        expect(startDate.getTime()).toBe(new Date('2024-05-12T00:00:00').getTime());\n        expect(endDate.getTime()).toBe(new Date('2024-05-12T23:59:59.999').getTime());\n    });\n});\n\ndescribe('getOneMonthAgo', () => {\n    it('주어진 날짜로부터 한 달 전의 정확한 날짜를 반환한다', () => {\n        const date = new Date('2024-03-01');\n        const { startDate, endDate } = getOneMonthAgo(date);\n\n        expect(formatDate(startDate)).toBe('2024-02-01');\n        expect(formatDate(endDate)).toBe('2024-03-01');\n    });\n});\n\ndescribe('getLastSunday', () => {\n    it('현재 날짜의 마지막 일요일을 반환한다', () => {\n        const lastSunday = getLastSunday();\n\n        expect(formatDate(lastSunday)).toEqual(expect.any(String));\n    });\n});\n"],"names":["describe","it","date","Date","expect","formatDate","toBe","getWeekNumber","startDate","endDate","getStartAndEndOfMonth","getStartAndEndOfWeek","getStartAndEndOfDay","getTime","getOneMonthAgo","lastSunday","getLastSunday","toEqual","any","String"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";0BAQO;AAEPA,SAAS,cAAc;IACnBC,GAAG,+CAA+C;QAC9C,MAAMC,OAAO,IAAIC,KAAK;QAEtBC,OAAOC,IAAAA,oBAAU,EAACH,OAAOI,IAAI,CAAC;IAClC;AACJ;AAEAN,SAAS,iBAAiB;IACtBC,GAAG,6BAA6B;QAC5B,MAAMC,OAAO,IAAIC,KAAK;QAEtBC,OAAOG,IAAAA,uBAAa,EAACL,OAAOI,IAAI,CAAC;IACrC;AACJ;AAEAN,SAAS,yBAAyB;IAC9BC,GAAG,oCAAoC;QACnC,MAAMC,OAAO,IAAIC,KAAK;QACtB,MAAM,EAAEK,SAAS,EAAEC,OAAO,EAAE,GAAGC,IAAAA,+BAAqB,EAACR;QAErDE,OAAOC,IAAAA,oBAAU,EAACG,YAAYF,IAAI,CAAC;QACnCF,OAAOC,IAAAA,oBAAU,EAACI,UAAUH,IAAI,CAAC;IACrC;AACJ;AAEAN,SAAS,wBAAwB;IAC7BC,GAAG,oCAAoC;QACnC,MAAMC,OAAO,IAAIC,KAAK;QACtB,MAAM,EAAEK,SAAS,EAAEC,OAAO,EAAE,GAAGE,IAAAA,8BAAoB,EAACT;QAEpDE,OAAOC,IAAAA,oBAAU,EAACG,YAAYF,IAAI,CAAC;QACnCF,OAAOC,IAAAA,oBAAU,EAACI,UAAUH,IAAI,CAAC;IACrC;AACJ;AAEAN,SAAS,uBAAuB;IAC5BC,GAAG,yDAAyD;QACxD,MAAMC,OAAO,IAAIC,KAAK;QACtB,MAAM,EAAEK,SAAS,EAAEC,OAAO,EAAE,GAAGG,IAAAA,6BAAmB,EAACV;QAEnDE,OAAOI,UAAUK,OAAO,IAAIP,IAAI,CAAC,IAAIH,KAAK,uBAAuBU,OAAO;QACxET,OAAOK,QAAQI,OAAO,IAAIP,IAAI,CAAC,IAAIH,KAAK,2BAA2BU,OAAO;IAC9E;AACJ;AAEAb,SAAS,kBAAkB;IACvBC,GAAG,iCAAiC;QAChC,MAAMC,OAAO,IAAIC,KAAK;QACtB,MAAM,EAAEK,SAAS,EAAEC,OAAO,EAAE,GAAGK,IAAAA,wBAAc,EAACZ;QAE9CE,OAAOC,IAAAA,oBAAU,EAACG,YAAYF,IAAI,CAAC;QACnCF,OAAOC,IAAAA,oBAAU,EAACI,UAAUH,IAAI,CAAC;IACrC;AACJ;AAEAN,SAAS,iBAAiB;IACtBC,GAAG,wBAAwB;QACvB,MAAMc,aAAaC,IAAAA,uBAAa;QAEhCZ,OAAOC,IAAAA,oBAAU,EAACU,aAAaE,OAAO,CAACb,OAAOc,GAAG,CAACC;IACtD;AACJ"}