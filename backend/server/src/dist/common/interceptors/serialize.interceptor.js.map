{"version":3,"sources":["../../../src/common/interceptors/serialize.interceptor.ts"],"sourcesContent":["import { CallHandler, ExecutionContext, NestInterceptor, UseInterceptors } from '@nestjs/common';\nimport { plainToInstance } from 'class-transformer';\nimport { Observable, map } from 'rxjs';\n\ninterface ClassConstructor {\n    new (...args: any[]): object;\n}\n\nexport class SerializeInterceptor implements NestInterceptor {\n    constructor(private readonly dto: ClassConstructor) {}\n\n    intercept(context: ExecutionContext, handler: CallHandler): Observable<any> {\n        return handler.handle().pipe(\n            map((data: any) => {\n                return plainToInstance(this.dto, data, {\n                    excludeExtraneousValues: true,\n                });\n            }),\n        );\n    }\n}\n\nexport function Serialize(dto: any) {\n    return UseInterceptors(new SerializeInterceptor(dto));\n}\n"],"names":["Serialize","SerializeInterceptor","intercept","context","handler","handle","pipe","map","data","plainToInstance","dto","excludeExtraneousValues","constructor","UseInterceptors"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;IAsBgBA,SAAS;eAATA;;IAdHC,oBAAoB;eAApBA;;;wBARmE;kCAChD;sBACA;AAMzB,IAAA,AAAMA,uBAAN,MAAMA;IAGTC,UAAUC,OAAyB,EAAEC,OAAoB,EAAmB;QACxE,OAAOA,QAAQC,MAAM,GAAGC,IAAI,CACxBC,IAAAA,SAAG,EAAC,CAACC;YACD,OAAOC,IAAAA,iCAAe,EAAC,IAAI,CAACC,GAAG,EAAEF,MAAM;gBACnCG,yBAAyB;YAC7B;QACJ;IAER;IAVAC,YAAY,AAAiBF,GAAqB,CAAE;aAAvBA,MAAAA;IAAwB;AAWzD;AAEO,SAASV,UAAUU,GAAQ;IAC9B,OAAOG,IAAAA,uBAAe,EAAC,IAAIZ,qBAAqBS;AACpD"}