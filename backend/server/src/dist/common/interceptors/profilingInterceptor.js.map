{"version":3,"sources":["../../../src/common/interceptors/profilingInterceptor.ts"],"sourcesContent":["import * as fs from 'node:fs';\n\nimport { CallHandler, ExecutionContext, Inject, Injectable, NestInterceptor } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { getDataSourceToken } from '@nestjs/typeorm';\nimport { Observable, from } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { DataSource } from 'typeorm';\n\n@Injectable()\nexport class ProfilingInterceptor implements NestInterceptor {\n    constructor(\n        @Inject(getDataSourceToken()) private readonly dataSource: DataSource,\n        private readonly configService: ConfigService,\n    ) {}\n\n    intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n        const originUrl = context.switchToHttp().getRequest().url.toString();\n        const method = context.switchToHttp().getRequest().method.toString();\n\n        return from(this.initProfiling()).pipe(\n            switchMap(() => {\n                const now = Date.now();\n                return next\n                    .handle()\n                    .pipe(\n                        switchMap((result) =>\n                            from(this.logProfilingData(method, originUrl, now)).pipe(map(() => result)),\n                        ),\n                    );\n            }),\n        );\n    }\n\n    private async logProfilingData(method: string, originUrl: string, startTime: number): Promise<void> {\n        const duration = Date.now() - startTime;\n        const timestamp = new Date().toLocaleString();\n\n        const profiles = await this.dataSource.query('SHOW PROFILES');\n        const queryDurations = profiles.map((profile: any) => ({\n            Query: profile.Query,\n            Duration: profile.Duration,\n        }));\n\n        fs.appendFileSync(\n            `log/query-profiling.${this.configService.get<string>('NODE_ENV')}.log`,\n            `>> ${method} ${originUrl}\\nTimestamp: ${timestamp}\\nAPI Call Duration: ${duration}ms\\nExecuted Queries: ${queryDurations.length}\\nQueries: ${JSON.stringify(queryDurations, null, 2)}\\n\\n`,\n        );\n    }\n\n    private async initProfiling(): Promise<void> {\n        await this.dataSource.query('SET profiling_history_size = 0');\n        await this.dataSource.query('SET profiling_history_size = 100');\n        await this.dataSource.query('SET profiling = 1');\n    }\n}\n"],"names":["ProfilingInterceptor","intercept","context","next","originUrl","switchToHttp","getRequest","url","toString","method","from","initProfiling","pipe","switchMap","now","Date","handle","result","logProfilingData","map","startTime","duration","timestamp","toLocaleString","profiles","dataSource","query","queryDurations","profile","Query","Duration","fs","appendFileSync","configService","get","length","JSON","stringify","constructor","Injectable","Inject","getDataSourceToken"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BAUaA;;;eAAAA;;;wBAVO;wBAE+D;wBACrD;yBACK;sBACF;2BACF;0BACJ;;;;;;;;;;;;;;;AAGpB,IAAA,AAAMA,uBAAN,MAAMA;IAMTC,UAAUC,OAAyB,EAAEC,IAAiB,EAAmB;QACrE,MAAMC,YAAYF,QAAQG,YAAY,GAAGC,UAAU,GAAGC,GAAG,CAACC,QAAQ;QAClE,MAAMC,SAASP,QAAQG,YAAY,GAAGC,UAAU,GAAGG,MAAM,CAACD,QAAQ;QAElE,OAAOE,IAAAA,UAAI,EAAC,IAAI,CAACC,aAAa,IAAIC,IAAI,CAClCC,IAAAA,oBAAS,EAAC;YACN,MAAMC,MAAMC,KAAKD,GAAG;YACpB,OAAOX,KACFa,MAAM,GACNJ,IAAI,CACDC,IAAAA,oBAAS,EAAC,CAACI,SACPP,IAAAA,UAAI,EAAC,IAAI,CAACQ,gBAAgB,CAACT,QAAQL,WAAWU,MAAMF,IAAI,CAACO,IAAAA,cAAG,EAAC,IAAMF;QAGnF;IAER;IAEA,MAAcC,iBAAiBT,MAAc,EAAEL,SAAiB,EAAEgB,SAAiB,EAAiB;QAChG,MAAMC,WAAWN,KAAKD,GAAG,KAAKM;QAC9B,MAAME,YAAY,IAAIP,OAAOQ,cAAc;QAE3C,MAAMC,WAAW,MAAM,IAAI,CAACC,UAAU,CAACC,KAAK,CAAC;QAC7C,MAAMC,iBAAiBH,SAASL,GAAG,CAAC,CAACS,UAAkB,CAAA;gBACnDC,OAAOD,QAAQC,KAAK;gBACpBC,UAAUF,QAAQE,QAAQ;YAC9B,CAAA;QAEAC,QAAGC,cAAc,CACb,CAAC,oBAAoB,EAAE,IAAI,CAACC,aAAa,CAACC,GAAG,CAAS,YAAY,IAAI,CAAC,EACvE,CAAC,GAAG,EAAEzB,OAAO,CAAC,EAAEL,UAAU,aAAa,EAAEkB,UAAU,qBAAqB,EAAED,SAAS,sBAAsB,EAAEM,eAAeQ,MAAM,CAAC,WAAW,EAAEC,KAAKC,SAAS,CAACV,gBAAgB,MAAM,GAAG,IAAI,CAAC;IAEnM;IAEA,MAAchB,gBAA+B;QACzC,MAAM,IAAI,CAACc,UAAU,CAACC,KAAK,CAAC;QAC5B,MAAM,IAAI,CAACD,UAAU,CAACC,KAAK,CAAC;QAC5B,MAAM,IAAI,CAACD,UAAU,CAACC,KAAK,CAAC;IAChC;IA3CAY,YACI,AAA+Cb,UAAsB,EACrE,AAAiBQ,aAA4B,CAC/C;aAFiDR,aAAAA;aAC9BQ,gBAAAA;IAClB;AAyCP;AA7CajC;IADZuC,IAAAA,kBAAU;IAGFC,aAAAA,IAAAA,cAAM,EAACC,IAAAA,2BAAkB;;;eAAiC,oBAAU,4BAAV,oBAAU;eACrC,qBAAa,4BAAb,qBAAa;;GAHxCzC"}