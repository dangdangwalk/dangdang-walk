{"version":3,"sources":["../../src/fixtures/users.fixture.ts"],"sourcesContent":["import {\n    OAUTH_ACCESS_TOKEN,\n    OAUTH_REFRESH_TOKEN,\n    VALID_PROVIDER_KAKAO,\n    VALID_REFRESH_TOKEN_100_YEARS,\n} from '../../test/constants';\nimport { ROLE } from '../users/types/role.type';\nimport { Users } from '../users/users.entity';\n\nexport const mockUser = new Users({\n    id: 1,\n    nickname: 'mock_oauth_nickname#12345',\n    email: 'mock_email@example.com',\n    profileImageUrl: 'mock_profile_image.jpg',\n    role: ROLE.User,\n    mainDogId: null,\n    oauthId: '12345',\n    oauthAccessToken: OAUTH_ACCESS_TOKEN,\n    oauthRefreshToken: OAUTH_REFRESH_TOKEN,\n    refreshToken: VALID_REFRESH_TOKEN_100_YEARS,\n    createdAt: new Date('2019-01-01'),\n});\n\nexport const mockUserProfile = {\n    id: 1,\n    nickname: 'mock_oauth_nickname#12345',\n    email: 'mock_email@example.com',\n    profileImageUrl: 'mock_profile_image.jpg',\n    provider: VALID_PROVIDER_KAKAO,\n};\n"],"names":["mockUser","mockUserProfile","Users","id","nickname","email","profileImageUrl","role","ROLE","User","mainDogId","oauthId","oauthAccessToken","OAUTH_ACCESS_TOKEN","oauthRefreshToken","OAUTH_REFRESH_TOKEN","refreshToken","VALID_REFRESH_TOKEN_100_YEARS","createdAt","Date","provider","VALID_PROVIDER_KAKAO"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;IASaA,QAAQ;eAARA;;IAcAC,eAAe;eAAfA;;;2BAlBN;0BACc;6BACC;AAEf,MAAMD,WAAW,IAAIE,kBAAK,CAAC;IAC9BC,IAAI;IACJC,UAAU;IACVC,OAAO;IACPC,iBAAiB;IACjBC,MAAMC,cAAI,CAACC,IAAI;IACfC,WAAW;IACXC,SAAS;IACTC,kBAAkBC,6BAAkB;IACpCC,mBAAmBC,8BAAmB;IACtCC,cAAcC,wCAA6B;IAC3CC,WAAW,IAAIC,KAAK;AACxB;AAEO,MAAMlB,kBAAkB;IAC3BE,IAAI;IACJC,UAAU;IACVC,OAAO;IACPC,iBAAiB;IACjBc,UAAUC,+BAAoB;AAClC"}