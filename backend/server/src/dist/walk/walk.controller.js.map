{"version":3,"sources":["../../src/walk/walk.controller.ts"],"sourcesContent":["import {\n    Body,\n    Controller,\n    Get,\n    HttpCode,\n    ParseArrayPipe,\n    Post,\n    UseGuards,\n    UsePipes,\n    ValidationPipe,\n} from '@nestjs/common';\n\nimport { DogSummaryResponse } from 'src/dogs/types/dogs.type';\n\nimport { AuthDogsGuard } from './guards/auth-dogs.guard';\nimport { WalkService } from './walk.service';\n\nimport { AccessTokenPayload } from '../auth/token/token.service';\nimport { DogsService } from '../dogs/dogs.service';\n\nimport { User } from '../users/decorators/user.decorator';\n\n@Controller('/dogs/walks')\n@UsePipes(new ValidationPipe({ whitelist: true }))\nexport class WalkController {\n    constructor(\n        private readonly walkService: WalkService,\n        private readonly dogsService: DogsService,\n    ) {}\n\n    @Post('/start')\n    @HttpCode(200)\n    @UseGuards(AuthDogsGuard)\n    async startWalk(@Body(new ParseArrayPipe({ items: Number, separator: ',' })) dogIds: number[]): Promise<number[]> {\n        return this.dogsService.updateIsWalking(dogIds, true);\n    }\n\n    @Post('/stop')\n    @HttpCode(200)\n    @UseGuards(AuthDogsGuard)\n    async stopWalk(@Body(new ParseArrayPipe({ items: Number, separator: ',' })) dogIds: number[]): Promise<number[]> {\n        return this.dogsService.updateIsWalking(dogIds, false);\n    }\n\n    @Get('/available')\n    async getAvailableDogs(@User() { userId }: AccessTokenPayload): Promise<DogSummaryResponse[]> {\n        return this.walkService.getAvailableDogs(userId);\n    }\n}\n"],"names":["WalkController","startWalk","dogIds","dogsService","updateIsWalking","stopWalk","getAvailableDogs","userId","walkService","constructor","Post","HttpCode","UseGuards","AuthDogsGuard","Body","ParseArrayPipe","items","Number","separator","Get","User","Controller","UsePipes","ValidationPipe","whitelist"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BAwBaA;;;eAAAA;;;wBAdN;+BAIuB;6BACF;8BAEO;6BACP;+BAEP;;;;;;;;;;;;;;;AAId,IAAA,AAAMA,iBAAN,MAAMA;IAMT,MAGMC,UAAU,AAA6DC,MAAgB,EAAqB;QAC9G,OAAO,IAAI,CAACC,WAAW,CAACC,eAAe,CAACF,QAAQ;IACpD;IAEA,MAGMG,SAAS,AAA6DH,MAAgB,EAAqB;QAC7G,OAAO,IAAI,CAACC,WAAW,CAACC,eAAe,CAACF,QAAQ;IACpD;IAEA,MACMI,iBAAiB,AAAQ,EAAEC,MAAM,EAAsB,EAAiC;QAC1F,OAAO,IAAI,CAACC,WAAW,CAACF,gBAAgB,CAACC;IAC7C;IAtBAE,YACI,AAAiBD,WAAwB,EACzC,AAAiBL,WAAwB,CAC3C;aAFmBK,cAAAA;aACAL,cAAAA;IAClB;AAoBP;;IAlBKO,IAAAA,YAAI,EAAC;IACLC,IAAAA,gBAAQ,EAAC;IACTC,IAAAA,iBAAS,EAACC,4BAAa;IACPC,aAAAA,IAAAA,YAAI,EAAC,IAAIC,sBAAc,CAAC;QAAEC,OAAOC;QAAQC,WAAW;IAAI;;;;;;GAThElB;;IAaRU,IAAAA,YAAI,EAAC;IACLC,IAAAA,gBAAQ,EAAC;IACTC,IAAAA,iBAAS,EAACC,4BAAa;IACRC,aAAAA,IAAAA,YAAI,EAAC,IAAIC,sBAAc,CAAC;QAAEC,OAAOC;QAAQC,WAAW;IAAI;;;;;;GAhB/DlB;;IAoBRmB,IAAAA,WAAG,EAAC;IACmBC,aAAAA,IAAAA,mBAAI;;;eAAe,gCAAkB,4BAAlB,gCAAkB;;;GArBpDpB;AAAAA;IAFZqB,IAAAA,kBAAU,EAAC;IACXC,IAAAA,gBAAQ,EAAC,IAAIC,sBAAc,CAAC;QAAEC,WAAW;IAAK;;;eAGT,wBAAW,4BAAX,wBAAW;eACX,wBAAW,4BAAX,wBAAW;;GAHpCxB"}