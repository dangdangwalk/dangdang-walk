{"version":3,"sources":["../../src/dog-walk-day/dog-walk-day.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { UpdateDogWalkDayOperation } from 'src/journals/types/journal.types';\nimport { EntityManager, FindOptionsWhere, In } from 'typeorm';\n\nimport { DogWalkDay } from './dog-walk-day.entity';\n\nimport { DogWalkDayRepository } from './dog-walk-day.repository';\n\nimport { WinstonLoggerService } from '../common/logger/winstonLogger.service';\nimport { getLastSunday } from '../utils/date.util';\nimport { makeSubObject } from '../utils/manipulate.util';\n\n@Injectable()\nexport class DogWalkDayService {\n    constructor(\n        private readonly dogWalkDayRepository: DogWalkDayRepository,\n        private readonly entityManager: EntityManager,\n        private readonly logger: WinstonLoggerService,\n    ) {}\n\n    async updateIfStaleAndGetWeeklyWalks(dogWalkDay: DogWalkDay): Promise<number[]> {\n        const lastSunday = getLastSunday();\n\n        if (dogWalkDay.updatedAt < lastSunday) {\n            const weeklyCountReset = { mon: 0, tue: 0, wed: 0, thr: 0, fri: 0, sat: 0, sun: 0 };\n            await this.dogWalkDayRepository.update({ id: dogWalkDay.id }, weeklyCountReset);\n            return Object.values(weeklyCountReset);\n        }\n\n        return Object.values(makeSubObject(dogWalkDay, ['mon', 'tue', 'wed', 'thr', 'fri', 'sat', 'sun']));\n    }\n\n    async updateDailyWalkCount(dogWalkDayIds: number[], operation: UpdateDogWalkDayOperation): Promise<void> {\n        const weekDay = ['sun', 'mon', 'tue', 'wed', 'thr', 'fri', 'sat'];\n        const today = new Date().getDay();\n        const day = weekDay[today];\n\n        const findDogWalkDays = await this.dogWalkDayRepository.find({ where: { id: In(dogWalkDayIds) } });\n        const updateEntities: Partial<DogWalkDay>[] = findDogWalkDays.map((curDogWalkDay) => {\n            const dogWalkDayCount = curDogWalkDay[day] as number;\n            return new DogWalkDay({ id: curDogWalkDay.id, [day]: operation(dogWalkDayCount) });\n        });\n\n        await this.entityManager\n            .createQueryBuilder(DogWalkDay, 'dogWalkDay')\n            .insert()\n            .into(DogWalkDay, ['id', day])\n            .values(updateEntities)\n            .orUpdate([day], ['id'])\n            .execute();\n    }\n\n    async delete(where: FindOptionsWhere<DogWalkDay>) {\n        return await this.dogWalkDayRepository.delete(where);\n    }\n}\n"],"names":["DogWalkDayService","updateIfStaleAndGetWeeklyWalks","dogWalkDay","lastSunday","getLastSunday","updatedAt","weeklyCountReset","mon","tue","wed","thr","fri","sat","sun","dogWalkDayRepository","update","id","Object","values","makeSubObject","updateDailyWalkCount","dogWalkDayIds","operation","weekDay","today","Date","getDay","day","findDogWalkDays","find","where","In","updateEntities","map","curDogWalkDay","dogWalkDayCount","DogWalkDay","entityManager","createQueryBuilder","insert","into","orUpdate","execute","delete","constructor","logger","Injectable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BAaaA;;;eAAAA;;;wBAbc;yBAEyB;kCAEzB;sCAEU;sCAEA;0BACP;gCACA;;;;;;;;;;AAGvB,IAAA,AAAMA,oBAAN,MAAMA;IAOT,MAAMC,+BAA+BC,UAAsB,EAAqB;QAC5E,MAAMC,aAAaC,IAAAA,uBAAa;QAEhC,IAAIF,WAAWG,SAAS,GAAGF,YAAY;YACnC,MAAMG,mBAAmB;gBAAEC,KAAK;gBAAGC,KAAK;gBAAGC,KAAK;gBAAGC,KAAK;gBAAGC,KAAK;gBAAGC,KAAK;gBAAGC,KAAK;YAAE;YAClF,MAAM,IAAI,CAACC,oBAAoB,CAACC,MAAM,CAAC;gBAAEC,IAAId,WAAWc,EAAE;YAAC,GAAGV;YAC9D,OAAOW,OAAOC,MAAM,CAACZ;QACzB;QAEA,OAAOW,OAAOC,MAAM,CAACC,IAAAA,6BAAa,EAACjB,YAAY;YAAC;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;SAAM;IACpG;IAEA,MAAMkB,qBAAqBC,aAAuB,EAAEC,SAAoC,EAAiB;QACrG,MAAMC,UAAU;YAAC;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;SAAM;QACjE,MAAMC,QAAQ,IAAIC,OAAOC,MAAM;QAC/B,MAAMC,MAAMJ,OAAO,CAACC,MAAM;QAE1B,MAAMI,kBAAkB,MAAM,IAAI,CAACd,oBAAoB,CAACe,IAAI,CAAC;YAAEC,OAAO;gBAAEd,IAAIe,IAAAA,WAAE,EAACV;YAAe;QAAE;QAChG,MAAMW,iBAAwCJ,gBAAgBK,GAAG,CAAC,CAACC;YAC/D,MAAMC,kBAAkBD,aAAa,CAACP,IAAI;YAC1C,OAAO,IAAIS,4BAAU,CAAC;gBAAEpB,IAAIkB,cAAclB,EAAE;gBAAE,CAACW,IAAI,EAAEL,UAAUa;YAAiB;QACpF;QAEA,MAAM,IAAI,CAACE,aAAa,CACnBC,kBAAkB,CAACF,4BAAU,EAAE,cAC/BG,MAAM,GACNC,IAAI,CAACJ,4BAAU,EAAE;YAAC;YAAMT;SAAI,EAC5BT,MAAM,CAACc,gBACPS,QAAQ,CAAC;YAACd;SAAI,EAAE;YAAC;SAAK,EACtBe,OAAO;IAChB;IAEA,MAAMC,OAAOb,KAAmC,EAAE;QAC9C,OAAO,MAAM,IAAI,CAAChB,oBAAoB,CAAC6B,MAAM,CAACb;IAClD;IAxCAc,YACI,AAAiB9B,oBAA0C,EAC3D,AAAiBuB,aAA4B,EAC7C,AAAiBQ,MAA4B,CAC/C;aAHmB/B,uBAAAA;aACAuB,gBAAAA;aACAQ,SAAAA;IAClB;AAqCP;AA1Ca7C;IADZ8C,IAAAA,kBAAU;;;eAGoC,0CAAoB,4BAApB,0CAAoB;eAC3B,sBAAa,4BAAb,sBAAa;eACpB,0CAAoB,4BAApB,0CAAoB;;GAJxC9C"}