{"version":3,"sources":["../../src/statistics/statistics.controller.ts"],"sourcesContent":["import { Controller, Get, Param, ParseIntPipe, Query, UseGuards } from '@nestjs/common';\n\nimport { DateValidationPipe } from './pipes/date-validation.pipe';\n\nimport { Period, PeriodValidationPipe } from './pipes/period-validation.pipe';\n\nimport { StatisticsService } from './statistics.service';\n\nimport { AccessTokenPayload } from '../auth/token/token.service';\nimport { AuthDogGuard } from '../dogs/guards/auth-dog.guard';\nimport { User } from '../users/decorators/user.decorator';\n\n@Controller('/dogs')\nexport class StatisticsController {\n    constructor(private readonly statisticsService: StatisticsService) {}\n\n    @Get('/:id(\\\\d+)/statistics/recent')\n    @UseGuards(AuthDogGuard)\n    async getDogMonthlyWalkingTotal(\n        @User() { userId }: AccessTokenPayload,\n        @Param('id', ParseIntPipe) dogId: number,\n        @Query('period', new PeriodValidationPipe(['month'])) period: Period,\n    ) {\n        return await this.statisticsService.getDogMonthlyWalkingTotal(userId, dogId, period);\n    }\n\n    @Get('/:id(\\\\d+)/statistics')\n    @UseGuards(AuthDogGuard)\n    async getDogDailyWalkCountsByPeriod(\n        @User() { userId }: AccessTokenPayload,\n        @Param('id', ParseIntPipe) dogId: number,\n        @Query('date', DateValidationPipe) date: string,\n        @Query('period', new PeriodValidationPipe(['month', 'week'])) period: Period,\n    ) {\n        return await this.statisticsService.getDogDailyWalkCountsByPeriod(userId, dogId, date, period);\n    }\n\n    @Get('/statistics')\n    async getDogsWeeklyWalkingOverview(@User() { userId }: AccessTokenPayload) {\n        return await this.statisticsService.getDogsWeeklyWalkingOverview(userId);\n    }\n}\n"],"names":["StatisticsController","getDogMonthlyWalkingTotal","userId","dogId","period","statisticsService","getDogDailyWalkCountsByPeriod","date","getDogsWeeklyWalkingOverview","constructor","Get","UseGuards","AuthDogGuard","User","Param","ParseIntPipe","Query","PeriodValidationPipe","DateValidationPipe","Controller"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BAaaA;;;eAAAA;;;wBAb0D;oCAEpC;sCAEU;mCAEX;8BAEC;8BACN;+BACR;;;;;;;;;;;;;;;AAGd,IAAA,AAAMA,uBAAN,MAAMA;IAGT,MAEMC,0BACF,AAAQ,EAAEC,MAAM,EAAsB,EACtC,AAA2BC,KAAa,EACxC,AAAsDC,MAAc,EACtE;QACE,OAAO,MAAM,IAAI,CAACC,iBAAiB,CAACJ,yBAAyB,CAACC,QAAQC,OAAOC;IACjF;IAEA,MAEME,8BACF,AAAQ,EAAEJ,MAAM,EAAsB,EACtC,AAA2BC,KAAa,EACxC,AAAmCI,IAAY,EAC/C,AAA8DH,MAAc,EAC9E;QACE,OAAO,MAAM,IAAI,CAACC,iBAAiB,CAACC,6BAA6B,CAACJ,QAAQC,OAAOI,MAAMH;IAC3F;IAEA,MACMI,6BAA6B,AAAQ,EAAEN,MAAM,EAAsB,EAAE;QACvE,OAAO,MAAM,IAAI,CAACG,iBAAiB,CAACG,4BAA4B,CAACN;IACrE;IA1BAO,YAAY,AAAiBJ,iBAAoC,CAAE;aAAtCA,oBAAAA;IAAuC;AA2BxE;;IAzBKK,IAAAA,WAAG,EAAC;IACJC,IAAAA,iBAAS,EAACC,0BAAY;IAElBC,aAAAA,IAAAA,mBAAI;IACJC,aAAAA,IAAAA,aAAK,EAAC,MAAMC,oBAAY;IACxBC,aAAAA,IAAAA,aAAK,EAAC,UAAU,IAAIC,0CAAoB,CAAC;QAAC;KAAQ;;;eAF/B,gCAAkB,4BAAlB,gCAAkB;;eAEwB,4BAAM,4BAAN,4BAAM;;;GAR/DjB;;IAaRU,IAAAA,WAAG,EAAC;IACJC,IAAAA,iBAAS,EAACC,0BAAY;IAElBC,aAAAA,IAAAA,mBAAI;IACJC,aAAAA,IAAAA,aAAK,EAAC,MAAMC,oBAAY;IACxBC,aAAAA,IAAAA,aAAK,EAAC,QAAQE,sCAAkB;IAChCF,aAAAA,IAAAA,aAAK,EAAC,UAAU,IAAIC,0CAAoB,CAAC;QAAC;QAAS;KAAO;;;eAHvC,gCAAkB,4BAAlB,gCAAkB;;;eAGgC,4BAAM,4BAAN,4BAAM;;;GAnBvEjB;;IAwBRU,IAAAA,WAAG,EAAC;IAC+BG,aAAAA,IAAAA,mBAAI;;;eAAe,gCAAkB,4BAAlB,gCAAkB;;;GAzBhEb;AAAAA;IADZmB,IAAAA,kBAAU,EAAC;;;eAEwC,oCAAiB,4BAAjB,oCAAiB;;GADxDnB"}