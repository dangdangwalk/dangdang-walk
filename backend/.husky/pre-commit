#!/bin/bash

NC='\033[0m'
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
MAGENTA='\033[0;35m'
BLUE='\033[0;36m'
PINK='\033[0;45m'

# Get the directory of the script
script_directory=$(dirname "$(realpath "$0")")
echo -e "${GREEN}[INFO]${NC} 현재 pre-commit script가 위치한 directory: ${BLUE}${script_directory}${NC}"

# Get current branch name
current_branch=$(git symbolic-ref --short HEAD)
echo -e "${GREEN}[INFO]${NC} 현재 branch name: ${BLUE}${current_branch}${NC}"

# Check if the current branch name follows project's naming convention
if [[ ! $current_branch =~ ^(frontend|backend|infra)\/DANG-[1-9][0-9]*$ ]]; then
  echo -e "${RED}[ERROR]${NC} 현재 branch name의 형식이 맞지 않습니다. (ex. frontend/DANG-1, backend/DANG-26, infra/DANG-72)"
  exit 1
fi

# Check if the current branch starts with "backend"
if [[ $current_branch == frontend* ]]; then
  echo -e "${YELLOW}[WARNING]${NC} frontend 폴더에서 작업하셨나요? 현재 실행 중인 스크립트가 backend 폴더에 위치하고 있습니다."
  echo -e "${YELLOW}[WARNING]${NC} frontend 설정으로 스크립트를 실행하려면 ${PINK}frontend 폴더에서${NC} ${MAGENTA}npm run prepare${NC}를 실행 한 뒤 다시 ${MAGENTA}git commit${NC}을 시도하세요."
fi

cd backend

# Apply linter and formatter
echo -e "${GREEN}[INFO]${NC} staged된 파일에 대해 linter와 formatter 적용"
npx lint-staged