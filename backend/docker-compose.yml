x-backend-common: &backend-common
  platform: linux/amd64
  networks:
    - default

x-mysql-image: &mysql-image
  image: mysql:8.0.22
  platform: linux/amd64

x-redis-image: &redis-image
  image: redis:7.0.15
  platform: linux/amd64

services:
  db:
    <<: *mysql-image
    container_name: dangdang-mysql
    profiles: ['server']
    environment:
      TZ: Asia/Seoul
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
    env_file: ./server/.env.local
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - 3306:3306
    restart: unless-stopped
    volumes:
      - ./db/mysql/data:/var/lib/mysql --user 1000
      - ./db/mysql/config:/etc/mysql/conf.d --user 1000
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "--password=root"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  server:
    <<: *backend-common
    container_name: dangdang-server
    profiles: ['server']
    image: dangdang-server
    restart: always
    build:
      context: .
      dockerfile: ./server/Dockerfile
    env_file: ./server/.env.local
    volumes:
      - ./server/log:/app/log
    ports:
      - 3333:3333
    networks:
      - default
    environment:
      - MYSQL_HOST=db
    depends_on:
      - db
    healthcheck:
        test: ['CMD', 'curl', '-f', "http://localhost:3333/health"]
        interval: 5s
        timeout: 5s
        retries: 5

  redis:
    <<: *redis-image
    container_name: dangdang-weather-redis
    profiles: ['weather']
    ports:
      - 6379:6379
    networks:
      - default
    command: redis-server
    volumes:
      - ./db/redis/data:/data

  weather:
    <<: *backend-common
    container_name: dangdang-weather
    profiles: ['weather']
    image: dangdang-weather
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./weather/Dockerfile
    env_file: ./weather/.env.local
    volumes:
      - ./:/app
      - /app/node_modules
      - ./weather/log:/app/log
    environment:
      - REDIS_HOST=redis
    ports:
      - 3335:3335
    depends_on:
      - redis
    working_dir: /app/weather
    command: npm run start

networks:
  default:
    driver: bridge
volumes:
  db:
    driver: local
