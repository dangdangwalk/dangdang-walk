services:
  db:
    container_name: db
    image: mysql:8.0.22
    platform: linux/amd64
    environment:
      TZ: Asia/Seoul
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    env_file:
      - ./backend/.env.dev
    ports:
      - 8080:3306
    restart: unless-stopped
    volumes:
      - ./db/mysql/data:/var/lib/mysql
      - ./db/mysql/config:/etc/mysql/conf.d
    networks:
      - my_network

  api:
    container_name: api
    image: dangdang-api
    platform: linux/amd64
    restart: unless-stopped
    build:
      context: backend
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./backend/.env.dev
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - 8081:3333
    networks:
      - my_network
    depends_on:
      - db
    command: npx nest start --watch

  front:
    container_name: frontend
    image: dangdang-front
    platform: linux/amd64
    restart: unless-stopped
    build:
      context: frontend
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./frontend/.env.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - 8082:3000
    networks:
      - my_network
    command: npm start

  swagger:
    container_name: swaggerapi
    image: swaggerapi/swagger-ui
    ports:
      - 8083:8080
    restart: unless-stopped
    environment:
      - URLS_PRIMARY_NAME=agenta
      - "URLS=[{ url: 'docs/openapi.yaml', name: 'agent' }]"
      - SUPPORTED_SUBMIT_METHODS=['get']
    volumes:
      - ./docs:/usr/share/nginx/html/docs

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - 8084:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - my_network
    depends_on:
      - api

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 8085:9090
    command:
      - --web.enable-lifecycle
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=30d
      - --storage.tsdb.retention.size=1GB
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/proemtheus/consoles
      - --web.enable-admin-api
    volumes:
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - .prometheus:/prometheus
    networks:
      - my_network
    depends_on:
      - cadvisor
      - node-exporter
      - api
      - mysql-exporter

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - my_network
    ports:
      - 8086:9100
    depends_on:
      - api
      - front

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    volumes:
      -  grafana:/var/lib/grafana
    networks:
      - my_network
    ports:
      - 8087:3000

  mysql-exporter:
    image: prom/mysqld-exporter
    container_name: mysql-exporter
    restart: unless-stopped
    command:
      - '--mysqld.username=exporter:exporterpassword'
      - '--mysqld.address=db:3306'
      - '--collect.info_schema.processlist'
      - '--collect.info_schema.innodb_metrics'
      - '--collect.info_schema.tablestats'
      - '--collect.info_schema.tables'
    networks:
      - my_network
    depends_on:
      - db
    ports:
      - 8088:9104

networks:
  my_network:
    driver: bridge

volumes:
  db:
    driver: local
  grafana:
    driver: local
